defns
  Alg :: 'Alg' ::=



  defn MΓ ; aΓ ⊨ sae ⇐ aA ⤳ ae ⫤ MΓ' :: :: Check :: 'C' by

   MΓ; aΓ ⊨ sae ⇒ aA ⤳ ae ⫤ MΓ1    MΓ1; aΓ ⊨ aA ≡ aB ⫤ MΓ2
   -------------------------------------------------------- :: Switch
   MΓ; aΓ ⊨ sae ⇐ aB ⤳ ae ⫤ MΓ2


  defn MΓ ; aΓ ⊨ sae ⇒ aA ⤳ ae ⫤ MΓ'  :: :: Inf :: 'I' by

    x : aA ∊ aG
    -------------- :: Var
    MΓ; aΓ ⊨ x ⇒ aA ⤳ x ⫤ MΓ

    ---------------------------- :: Unit
    MΓ; aΓ ⊨ <> ⇒ Unit ⤳ <> ⫤ MΓ

    MΓ; aΓ, x:aA ⊨ sae ⇒ aB ⤳ ae ⫤ MΓ'
    -------------------------------------- :: Lam
    MΓ; aΓ ⊨ λx:aA.sae ⇒ Πx:aA.aB ⤳ λx:aA.ae ⫤ MΓ'

    MΓ; aΓ, x:aA ⊨ sae ⇒ aB ⤳ ae ⫤ MΓ'
    ------------------------------------------ :: PLam
    MΓ; aΓ ⊨ λ̂x:aA.sae ⇒ ∀x:aA.aB ⤳ λ̂x:aA.ae ⫤ MΓ'

    MΓ; aΓ ⊨ sae ⇒ aA ⤳ ae ⫤ MΓ1    MΓ1; aΓ ⊨ sas : aA >> aB ⤳ as ⫤ MΓ2
    ----------------------------------------------------------------- :: App
    MΓ; aΓ ⊨ sae(sas) ⇒ aB ⤳ ae(as) ⫤ MΓ2

    MΓ; aΓ ⊨ sae ⇒ aA ⤳ ae ⫤ MΓ' 
    ------------------------------------------- :: Refl
    MΓ; aΓ ⊨ refl sae ⇒ ae = ae : aA ⤳ refl ae ⫤ MΓ'

    %aΓ ⊨ A aΓ, x:A ⊨ B
    %aΓ ⊨ se1 ⇐ A ⤳ e1   aΓ ⊨ se2 ⇐ A ⤳ e2
    %aΓ ⊨ sp ⇐ e1 = e2 : A ⤳ p
    %aΓ ⊨ se ⇐ [e1/x]B ⤳ e
    % -------------------------------------------------- :: Subst
    %aΓ ⊨ subst(sp : se1 = se2 : A, x.B , se) ⇒ [e2/x]B ⤳ subst(p : e1 = e2 : A, x.B , e)

  defn MΓ ; aΓ ⊨ sas : aA >> aB ⤳ as ⫤ MΓ' :: :: SpineApp :: 'SA' by

    ---------------------------- :: Empty
    MΓ; aΓ ⊨ · : aA >> aA ⤳ · ⫤ MΓ

    MΓ; aΓ ⊨ Πx:aB.aA ⫤ MΓ1
    MΓ1; aΓ ⊨ sae ⇐ aB ⤳ ae ⫤ MΓ2
    MΓ2; aΓ ⊨ sas : [ae/x]aA >> aC ⤳ as ⫤ MΓ3
    ------------------------------------------ :: Arg
    MΓ; aΓ ⊨ sae, sas : (Πx:aB.aA) >> aC ⤳ ae, as ⫤ MΓ3

    MΓ; aΓ ⊨ ∀x:aB.aA ⫤ MΓ1
    MΓ1; aΓ ⊨ sae ⇐ aB ⤳ ae ⫤ MΓ2
    MΓ2; aΓ ⊨ sas : [ae/x]aA >> aC ⤳ as ⫤ MΓ3
    ---------------------------------------------------- :: ImpArg
    MΓ; aΓ ⊨ {sae}, sas : (∀x:aB.aA) >> aC ⤳ {ae}, as ⫤ MΓ3

    MΓ; aΓ ⊨ ∀x:aB.aA ⫤ MΓ1  MΓ1; aΓ ⊨ sas : [ax/x]aA >> aC ⤳ as ⫤ MΓ2
    ------------------------------------------------------------------------- :: HoleArg
    MΓ; aΓ ⊨ {_}, sas : (∀x:aB.aA) >> aC ⤳ {ax}, as ⫤  MΓ2, (aΓ ⊢ ax ⇐ aB)


  defn MΓ ; aΓ ⊨ aA ⫤ MΓ' :: :: Wf :: 'WF' by

    ------------------ :: Unit
    MΓ; aΓ ⊨ Unit ⫤ MΓ

    MΓ; aΓ ⊨ aA ⫤ MΓ1    MΓ1; aΓ, x:aA ⊨ aB ⫤ MΓ2
    --------------------------------------------- :: Pi
    MΓ; aΓ ⊨ Πx:aA.aB ⫤ MΓ2

    MΓ; aΓ ⊨ aA ⫤ MΓ1    MΓ1; aΓ, x:aA ⊨ aB ⫤ MΓ2
    --------------------------------------------- :: Forall
    MΓ; aΓ ⊨ ∀x:aA.aB ⫤ MΓ2

    MΓ; aΓ ⊨ aA ⫤ MΓ1   
    MΓ1; aΓ ⊨ lift ae1 ⇐ aA ⤳ ae3 ⫤ MΓ2    MΓ2; aΓ ⊨ lift ae2 ⇐ aA ⤳ ae3 ⫤ MΓ3
    --------------------------------------------------------------------------- :: Eq 
    MΓ; aΓ ⊨ ae1 = ae2 : aA ⫤ MΓ3


  defn MΓ ; aΓ ⊨ aA ≡ aB ⫤ MΓ' :: :: Unif :: 'U' by

